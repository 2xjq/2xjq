VO
#include<stdio.h>
#include<string. h>

int main()
{
char strExp[ ]="3+4";

int leftOperand = strExp[0]-'0';
int rightOperand = strExp[2] - '0';
int res = leftOperand + rightOperand;
printf("res = %d\n" ,res);

return 0;
}

V1
#include<stdio.h>
#include<string.h>

int main()
{
char strExp[ ]="1+2+2+1+2+5+4-1-3+4-8" ;
int res=strExp[0]-'0';
for(int i=1;i<strlen(strExp);i++)
{
if(strExp[i]=='+')
{
int a=strExp[i+1]-'0';
res=res+a;
i++;
}
eise if(strExp[i]=='-')
{
int b=strExp[i+1]-'0';
res-res -b;
i++;
}
}
printf("res = %d" ,res);
return 0;
}
V2
#include <stdio.h>
#include<string.h>
void  main()  
{
 char str[]="2*2/4*1/1*2*3/2";
int res=str[0]-'0' ;
for(int i=1;i<strlen(str);i++)
{
if (str[i]-='*')
int a=str[i+1]-'0';
res=res*a;
i++;
}
else if(str[i]=='/')
{
int b=str[i+1]-'0';
res=res/b;

i++ ;
}
printf("res =%d",res);

return 0;
}
V3
#include <stdio.h>
#include<string.h>
#define N 20
void  main()  
{
 double s=0;
 char *p;
 char a[N],b[N];
 gets(a);
 p=&a[0];
  s+=*p-48;
 p++;
 while(1)
 { if(*p=='+')

 s=s+(*(p+1)-48); 
 else if(*p--'_') 
 s=s-(*(p+1)-48); 
 else if(*p=*") 
  s=s*(*(p+1)-48); 
 else 1f(*p==/') 
  s=s/(double)(*(p+1)-48);
  p=p+2; 
  if(*p=='\0') 
  break; 
 }
  printf("%.21f",s);
}
